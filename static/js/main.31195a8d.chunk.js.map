{"version":3,"sources":["Components/AGGridControls/AgGridButtonRenderer.js","Components/AGGridControls/AgGridStatusRenderer.js","Components/Controls/DialogBox.js","Components/ListScreens/StudentsList.js","Components/Student.js","Components/ListScreens/TeachersList.js","Components/Teacher.js","Components/ListScreens/FeaturesList.js","Components/HomePage.js","Components/Controls/BackdropControl.js","Components/ListScreens/UsersList.js","Components/Users.js","Components/NotFound.js","Components/EntryScreens/StundentEntry.js","Components/EntryScreens/TeacherEntry.js","Components/Controls/SwitchControl.js","Components/EntryScreens/UserEntry.js","Components/Authentication/SignIn.js","Components/Authentication/SignUp.js","Components/Controls/CustomMenu.js","Components/Controls/HeaderButton.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AgGridButtonRenderer","props","handleDeleteClick","a","handleClick","value","style","color","red","onClick","AgGridStatusRenderer","green","handler","dialogApi","title","content","action","setOpen","setTitle","setContent","setAction","DialogBox","handleAction","React","useState","open","useEffect","handleClose","handleOk","Dialog","onClose","DialogTitle","id","DialogContent","map","con","index","DialogContentText","DialogActions","Button","autoFocus","StudentsList","MockData","studentsdata","setStudentData","selStudent","setSelStudent","console","log","studentAction","studentid","alert","handleDeleteConfirmation","students","Object","values","filter","item","padding","Typography","variant","component","Accordion","AccordionSummary","expandIcon","AccordionDetails","className","height","width","pagination","paginationPageSize","frameworkComponents","buttonRederer","ButtonRederer","statusRenderer","StatusRederer","rowData","skipHeaderOnAutoSize","resizable","onGridReady","params","field","cellRenderer","cellRendererParams","caption","headerName","sortable","editable","Student","TeachersList","teachersData","Teachers","useStyles","makeStyles","card","display","cardDetails","flex","cardMedia","FeaturesList","classes","posts","setPost","AppFeaturesMockData","Container","maxWidth","Grid","container","spacing","post","xs","md","CardActionArea","href","Card","CardContent","date","paragraph","description","HomePage","theme","root","flexDirection","alignItems","backdrop","zIndex","drawer","BackdorpControl","defaultOpen","message","Backdrop","CircularProgress","UsersList","data","setData","selId","setSelId","fetch","headers","then","response","json","myJson","setTimeout","userAction","usersData","length","Users","NotFound","textAlign","to","seeMore","marginTop","marginLeft","marginRight","marginBottom","background","header","StudentEntry","Paper","Box","p","m","bgcolor","autoComplete","sm","TextField","required","name","label","fullWidth","FormControlLabel","control","Checkbox","TeacherEntry","SwitchControl","updateField","disabled","handleChange","Switch","checked","onChange","event","target","UserEntry","userData","setUserData","itemName","itemValue","Copyright","align","Link","Date","getFullYear","paper","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","CssBaseline","Avatar","noValidate","type","mt","SignUp","justifyContent","withRouter","menuName","subMenus","anchorEl","setAnchorEl","currentTarget","gutterBottom","textDecoration","boxShadow","Menu","keepMounted","Boolean","MenuItem","paddingLeft","tyle","Path","Name","isLoggedIn","click","small","med","large","Header","setLoggedIn","login","islogin","Redirect","paddingTop","Tooltip","App","exact","path","Teacher","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31195a8d.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { green, orange, red } from '@material-ui/core/colors';\r\nfunction AgGridButtonRenderer(props) {\r\n   // console.log(props.value)\r\n    const handleAddClick = async () => {\r\n        await props.handleClick(props.value, 'Add');\r\n        //alert('Add')\r\n    }\r\n    const handleDeleteClick = async () => {\r\n        //alert('Delete')\r\n        await props.handleClick(props.value, 'Delete');\r\n    }\r\n    const handleEditClick = async () => {\r\n        //alert('Edit')\r\n        await props.handleClick(props.value, 'Edit');\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <CancelIcon style={{ color: red[400] }} onClick={handleDeleteClick} ></CancelIcon>\r\n            {\r\n                //<BorderColorIcon style={{ color: orange[400] }} onClick={handleEditClick} ></BorderColorIcon>\r\n                //           <AddCircleIcon style={{ color: green[400] }} onClick={handleAddClick} ></AddCircleIcon>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\nexport default AgGridButtonRenderer;","import React from 'react'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport { green,orange,red } from '@material-ui/core/colors';\r\nconst AgGridStatusRenderer = (props) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.value == 'true' || props.value == 'active'?\r\n                    <CheckIcon style={{ color: green[400] }} />                   \r\n                    :\r\n                    <CheckIcon style={{ color: red[400] }} />\r\n                }               \r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AgGridStatusRenderer;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\n\r\nlet handler = {}\r\n\r\nexport const dialogApi =\r\n{\r\n  show: (title, content, action) => {\r\n    handler.setOpen(true)\r\n    handler.setTitle(title)\r\n    handler.setContent([content])\r\n    handler.setAction(action)\r\n  }\r\n  ,\r\n  showContentList: (title, content, action) => {\r\n    handler.setOpen(true)\r\n    handler.setTitle(title)\r\n    handler.setContent(content)\r\n    handler.setAction(action)\r\n  },\r\n\r\n}\r\n\r\nconst DialogBox = ({ handleAction }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [content, setContent] = React.useState('');\r\n  const [action, setAction] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n      handler.setOpen = setOpen\r\n      handler.setTitle = setTitle\r\n      handler.setContent = setContent\r\n      handler.setAction = setAction\r\n  }, []\r\n  )\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOk = async() => {\r\n    setOpen(false)\r\n    await handleAction(action)\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            content ?\r\n              content.map((con, index) =>\r\n                <DialogContentText key={index} id=\"dialog-description-content-text\">\r\n                  {con}\r\n                </DialogContentText>\r\n              ) : null\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nDialogBox.propTypes = {\r\n  handleAction: PropTypes.func\r\n}\r\n\r\nexport default DialogBox","import React, { useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MockData from '../../MockData/Students.json'\r\nimport ButtonRederer from '../AGGridControls/AgGridButtonRenderer'\r\nimport StatusRederer from '../AGGridControls/AgGridStatusRenderer'\r\nimport DialogBox, { dialogApi } from '../Controls/DialogBox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nfunction StudentsList() {\r\n\r\n  //let studentsdata = MockData\r\n  const [studentsdata, setStudentData] = useState(MockData)\r\n  const [selStudent, setSelStudent] = useState('')\r\n  console.log(MockData);\r\n\r\n\r\n\r\n  const studentAction = async (studentid, action) => {\r\n    console.log(studentid, action);\r\n    if (action == 'Delete') {\r\n      setSelStudent(studentid)\r\n      dialogApi.show(\"Delete Confirmation\", \"Deleting the student from the records\", \"Delete\")\r\n\r\n    } else {\r\n      alert('action completed' + 'Student id: ' + studentid + ' Action: ' + action);\r\n    }\r\n\r\n  }\r\n\r\n  const handleDeleteConfirmation = async () => {\r\n    //alert(selStudent)\r\n    let students = Object.values(studentsdata)\r\n    console.log('before filter', students)\r\n    setStudentData(students.filter(item => item.id !== selStudent))\r\n\r\n    console.log('after filter', studentsdata)\r\n\r\n  }\r\n\r\n  function onMygridReady(params) {\r\n    //params.api.sizeColumnsToFit();\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        Student List\r\n      </Typography>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography >Grid Features</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            You can sort the columns by clicking on the column header. You can filter data from the column header.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    \r\n      <div className=\"ag-theme-alpine\" style={{ height: 350, width: 'auto' }}>\r\n        <AgGridReact pagination={true} paginationPageSize=\"10\"\r\n          frameworkComponents={{\r\n            buttonRederer: ButtonRederer,\r\n            statusRenderer: StatusRederer\r\n          }\r\n          }\r\n          rowData={studentsdata}\r\n          skipHeaderOnAutoSize=\"true\"\r\n          resizable=\"true\"\r\n          onGridReady={onMygridReady}\r\n        >\r\n          <AgGridColumn width={110} field=\"id\" cellRenderer=\"buttonRederer\"\r\n            cellRendererParams={{ caption: \"CRUD\", handleClick: studentAction }}\r\n            headerName=\"\"></AgGridColumn>\r\n          <AgGridColumn field=\"activeStatus\" cellRenderer=\"statusRenderer\" width={90}\r\n            headerName=\"Active\" ></AgGridColumn>\r\n          <AgGridColumn field=\"id\" width={60} ></AgGridColumn>\r\n          <AgGridColumn field=\"firstname\" headerName=\"First Name\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"lastname\" headerName=\"Last Name\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"gender\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"email\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"username\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"color\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n        </AgGridReact>\r\n        <DialogBox handleAction={handleDeleteConfirmation} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default StudentsList;","import React, { useEffect, useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport StudentsList from \"./ListScreens/StudentsList\"\r\nfunction Student() {\r\n\r\n  return (\r\n    <>\r\n      <StudentsList/>\r\n    </>\r\n  );\r\n}\r\nexport default Student;","import React from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MockData from '../../MockData/Teachers.json'\r\nfunction TeachersList() {\r\n\r\n    let teachersData = MockData\r\n    console.log(MockData);\r\n\r\n    return (\r\n        <div style={{ padding: '10px' }}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                Teachers List\r\n            </Typography>\r\n            <div className=\"ag-theme-alpine\" style={{ height: '450px', width: 'auto' }}>\r\n                <AgGridReact rowData={teachersData} pagination={true} paginationPageSize=\"10\"  >\r\n                    <AgGridColumn field=\"id\" ></AgGridColumn>\r\n                    <AgGridColumn field=\"first_name\" headerName=\"First Name\"></AgGridColumn>\r\n                    <AgGridColumn field=\"last_name\" headerName=\"Last Name\"></AgGridColumn>\r\n                    <AgGridColumn field=\"gender\"></AgGridColumn>\r\n                    <AgGridColumn field=\"email\"></AgGridColumn>\r\n                    <AgGridColumn field=\"username\"></AgGridColumn>\r\n                    <AgGridColumn field=\"color\"></AgGridColumn>\r\n                </AgGridReact>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeachersList;","import React from 'react';\r\nimport TeachersList from \"./ListScreens/TeachersList\"\r\nfunction Teachers() {    \r\n    \r\n    return (\r\n       <>\r\n       <TeachersList></TeachersList>\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Teachers;","import React, { useEffect,useState } from 'react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppFeaturesMockData from '../../MockData/ApplicationFeatures.json'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      display: 'flex',\r\n    },\r\n    cardDetails: {\r\n      flex: 1,\r\n    },\r\n    cardMedia: {\r\n      width: 160,\r\n    },\r\n  });\r\n\r\nfunction FeaturesList() {\r\n    \r\n    const classes = useStyles();   \r\n\r\n    const [posts, setPost]= useState([])    \r\n      useEffect(()=>{    \r\n        setPost(Object.values(AppFeaturesMockData))\r\n      },[])\r\n\r\n    return(\r\n        <>      \r\n      <Container maxWidth=\"lg\">      \r\n          <br/>\r\n          <Grid container spacing={4}>\r\n            {posts.map((post, index) => (\r\n                  <Grid item xs={12} md={6} key={'grid'+index}>\r\n                    <CardActionArea component=\"a\" href=\"#\" >\r\n                      <Card className={classes.card}>\r\n                        <div className={classes.cardDetails}>\r\n                          <CardContent>\r\n                            <Typography component=\"h2\" variant=\"h5\">\r\n                              {post.title}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                              {post.date}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" paragraph>\r\n                              {post.description}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"primary\">\r\n                              Continue reading...\r\n                            </Typography>                            \r\n                          </CardContent>\r\n                        </div>\r\n                       \r\n                      </Card>\r\n                    </CardActionArea>\r\n                  </Grid>\r\n                \r\n            ))}\r\n          </Grid>                \r\n      \r\n      </Container>  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default FeaturesList;","import React, { useEffect,useState } from 'react';\r\nimport FeatureList from '../Components/ListScreens/FeaturesList'\r\nfunction HomePage() {\r\n        return(\r\n        <>\r\n         <FeatureList/>\r\n        </>\r\n    );\r\n}\r\nexport default HomePage;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: 10\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nlet handler = {}\r\n\r\nexport const backDropApi = {\r\n    open: () => {\r\n        handler.setOpen(true)\r\n    },\r\n    clsoe: () => {\r\n        handler.setOpen(false)\r\n    }\r\n}\r\n\r\nconst BackdorpControl = ({ defaultOpen, message }) => {\r\n\r\n    message = message || \"\"\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        handler.setOpen = setOpen\r\n    }, []\r\n\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop className={classes.backdrop} open={open || defaultOpen} >\r\n                <div className={classes.root}>\r\n                    <div><CircularProgress color=\"inherit\" /></div>\r\n                    <div><Typography>{message} </Typography></div>\r\n                </div>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n\r\nBackdorpControl.propTypes = {\r\n    defaultOpen: PropTypes.bool,\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default BackdorpControl;","import React, { useEffect, useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonRederer from '../AGGridControls/AgGridButtonRenderer'\r\nimport StatusRederer from '../AGGridControls/AgGridStatusRenderer'\r\nimport DialogBox, { dialogApi } from '../Controls/DialogBox';\r\nimport Backdrop from '../Controls/BackdropControl';\r\nfunction UsersList() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [selId, setSelId] = useState('')\r\n    const getData = () => {\r\n        fetch('https://gorest.co.in/public/v1/users'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }            \r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                \r\n                setTimeout(() => {  setData(myJson.data);}, 1000);\r\n               \r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n\r\n    const userAction = async (id, action) => {\r\n        console.log(id, action);\r\n        if (action == 'Delete') {\r\n            setSelId(id)\r\n            dialogApi.show(\"Delete Confirmation\", \"Deleting the user from the records\", \"Delete\")\r\n\r\n        } else {\r\n            alert('action completed' + 'Student id: ' + id + ' Action: ' + id);\r\n        }\r\n\r\n    }\r\n\r\n    const handleDeleteConfirmation = async () => {\r\n        let usersData = Object.values(data)\r\n        console.log(selId)\r\n        setData(usersData.filter(item => item.id !== selId))\r\n    \r\n        \r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: '10px' }}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                Users List\r\n            </Typography>\r\n            <div className=\"ag-theme-alpine\" style={{ height: '450px', width: 'auto' }}>\r\n                {data.length ?\r\n                    <AgGridReact\r\n                        frameworkComponents={{\r\n                            buttonRederer: ButtonRederer,\r\n                            statusRenderer: StatusRederer\r\n                        }\r\n                        }\r\n                        rowData={data}\r\n                        skipHeaderOnAutoSize=\"true\"\r\n                    >\r\n                        <AgGridColumn width={100} field=\"id\" headerName=\"\" cellRenderer=\"buttonRederer\" cellRendererParams={{ caption: \"CRUD\", handleClick: userAction }} ></AgGridColumn>\r\n                        <AgGridColumn field=\"status\" cellRenderer=\"statusRenderer\" width={100}\r\n                            headerName=\"Active\" ></AgGridColumn>\r\n                        <AgGridColumn field=\"id\" ></AgGridColumn>\r\n                        <AgGridColumn field=\"name\" headerName=\"Name\"></AgGridColumn>\r\n                        <AgGridColumn field=\"email\" headerName=\"Email\"></AgGridColumn>\r\n                        <AgGridColumn field=\"gender\"></AgGridColumn>\r\n                        <AgGridColumn field=\"status\"></AgGridColumn>\r\n                    </AgGridReact>\r\n                    : <Backdrop defaultOpen={true}  message=\"Fetching data\" />\r\n                }\r\n                <DialogBox handleAction={handleDeleteConfirmation} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MockData from '../MockData/Students.json'\r\nimport ButtonRederer from './AGGridControls/AgGridButtonRenderer'\r\nimport StatusRederer from './AGGridControls/AgGridStatusRenderer'\r\nimport DialogBox, { dialogApi } from './Controls/DialogBox';\r\nimport Backdrop from './Controls/BackdropControl';\r\nimport UsersList from \"./ListScreens/UsersList\"\r\nfunction Users() {\r\n\r\n    \r\n    return (\r\n        <>\r\n        <UsersList/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction NotFound()\r\n{\r\n    return(\r\n        <>\r\n        <br/><br/><br/><br/><br/>\r\n        <Typography variant=\"h5\" style={{textAlign:'center'}} > We dont found this page in application. This is invalid operation.</Typography>\r\n        <Typography variant=\"h8\" style={{textAlign:'center'}} > Link</Typography>\r\n       <Link to=\"/\" style={{textAlign:'center', alignItems:'right'}}>Go Home</Link>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    background: \"#b3d9ff\"\r\n  },\r\n  header: {\r\n    color: \"red\"\r\n  },\r\n}));\r\nfunction StudentEntry() {\r\n\r\n    return(\r\n        <>\r\n       <Container maxWidth={false}>\r\n      <Paper style={{ padding: '2px' }} >\r\n        <Box display=\"flex\" p={1} m={1} bgcolor=\"background.paper\" >\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Student Details:\r\n          </Typography>\r\n        </Box>\r\n        <form autoComplete=\"off\">\r\n          <Grid container spacing={1} id=\"121\" >\r\n          <Grid item xs={12} sm={4} >\r\n              <TextField\r\n                required\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                required\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                label=\"Last name\"\r\n                fullWidth\r\n                // autoComplete=\"family-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                required\r\n                id=\"middleName\"\r\n                name=\"middleName\"\r\n                label=\"Middle name\"\r\n                fullWidth\r\n                // autoComplete=\"family-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                fullWidth\r\n                //  autoComplete=\"shipping address-line1\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-line2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-level2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"zip\"\r\n                name=\"zip\"\r\n                label=\"Zip / Postal code\"\r\n                fullWidth\r\n                //autoComplete=\"shipping postal-code\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"country\"\r\n                name=\"country\"\r\n                label=\"Country\"\r\n                fullWidth\r\n               // autoComplete=\"shipping country\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"secondary\" name=\"isActive\" value=\"yes\" />}\r\n                label=\"Acitve\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentEntry;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nfunction TeacherEntry() {\r\n\r\n    return(\r\n        <>\r\n       <Container maxWidth={false}>\r\n      <Paper style={{ padding: '2px' }} >\r\n        <Box display=\"flex\" p={1} m={1} bgcolor=\"background.paper\" >\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Teacher Details:\r\n          </Typography>\r\n        </Box>\r\n        <form autoComplete=\"off\">\r\n          <Grid container spacing={1} id=\"121\" >\r\n            <Grid item xs={12} sm={4} >\r\n              <TextField\r\n                required\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                required\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                label=\"Last name\"\r\n                fullWidth\r\n                // autoComplete=\"family-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                required\r\n                id=\"middleName\"\r\n                name=\"middleName\"\r\n                label=\"Middle name\"\r\n                fullWidth\r\n                // autoComplete=\"family-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                fullWidth\r\n                //  autoComplete=\"shipping address-line1\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-line2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-level2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"zip\"\r\n                name=\"zip\"\r\n                label=\"Zip / Postal code\"\r\n                fullWidth\r\n                //autoComplete=\"shipping postal-code\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"country\"\r\n                name=\"country\"\r\n                label=\"Country\"\r\n                fullWidth\r\n               // autoComplete=\"shipping country\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"secondary\" name=\"isActive\" value=\"yes\" />}\r\n                label=\"Acitve\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherEntry;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FormControlLabel, Switch } from '@material-ui/core'\r\nconst SwitchControl = ({\r\n    value,\r\n    name,\r\n    label,\r\n    updateField,    \r\n    disabled,\r\n    handleChange\r\n}) => {\r\n    value = value || false\r\n\r\n    const handleControlChange = (event) => {\r\n        handleChange(event.target.name, event.target.checked);\r\n        updateField(event.target.name, event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormControlLabel\r\n                label={label}\r\n                control={<Switch name={name} checked={value} onChange={handleControlChange} />}\r\n                disabled={disabled == true}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nSwitchControl.propTypes = {\r\n    value : PropTypes.any,\r\n    handleChange : PropTypes.func,\r\n    name : PropTypes.string,\r\n    label: PropTypes.string,\r\n    updateField: PropTypes.func\r\n}\r\n\r\nexport default  SwitchControl;","import React,{useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport SwitchControl  from '../Controls/SwitchControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    background: \"#b3d9ff\"\r\n  },\r\n  header: {\r\n    color: \"red\"\r\n  },\r\n}));\r\n\r\nfunction UserEntry() {\r\nconst [userData,setUserData] = useState({name:\"Active\", label:\"Is Active\", value:false})\r\nconst handleChange =(itemName, itemValue)=>{\r\n  setUserData({name:\"Active\", label:\"Is Active\", value:itemValue})\r\n}\r\n\r\nconst updateField =(itemName, itemValue)=>{\r\n\r\n}\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Paper style={{ padding: '2px' }} >\r\n        <Box display=\"flex\" p={1} m={1} bgcolor=\"background.paper\" >\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            User Details:\r\n          </Typography>\r\n        </Box>\r\n        <form autoComplete=\"off\">\r\n          <Grid container spacing={1} id=\"121\" >\r\n            <Grid item xs={12} sm={6} >\r\n              <TextField\r\n                required\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                label=\"Last name\"\r\n                fullWidth\r\n                // autoComplete=\"family-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} >\r\n              <TextField\r\n                required\r\n                id=\"bithDate\"\r\n                name=\"birthDate\"\r\n                label=\"Birth Date\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} >\r\n              <TextField\r\n                required\r\n                id=\"anniversaryDate\"\r\n                name=\"anniversaryDate\"\r\n                label=\"Anniversary Date\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} >\r\n              <TextField\r\n                required\r\n                id=\"emailAddress\"\r\n                name=\"emailAddress\"\r\n                label=\"Email Address\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                fullWidth\r\n                //  autoComplete=\"shipping address-line1\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-line2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-level2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"zip\"\r\n                name=\"zip\"\r\n                label=\"Zip / Postal code\"\r\n                fullWidth\r\n                //autoComplete=\"shipping postal-code\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"country\"\r\n                name=\"country\"\r\n                label=\"Country\"\r\n                fullWidth\r\n                // autoComplete=\"shipping country\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {\r\n               // <FormControlLabel\r\n                //control={<Checkbox color=\"secondary\" name=\"isActive\" value=\"yes\" />}\r\n                //label=\"Acitve\"   />\r\n}\r\n              <SwitchControl {...userData} handleChange={handleChange} updateField={updateField}/>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserEntry;","  \r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst CustomMenu = ({ menuName, subMenus }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <Typography variant=\"h6\" gutterBottom style={{ color: 'white' }}>\r\n          {subMenus ?\r\n            menuName :\r\n            <Link style={{ textDecoration: 'none', boxShadow: \"none\", color: 'white' }} to={\"/\"} href=\"#\">\r\n              {menuName}\r\n            </Link>}\r\n        </Typography>\r\n      </Button>\r\n      {subMenus ?\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          {\r\n\r\n            subMenus.map((item, index) => (\r\n              <MenuItem key={'Key' + index + menuName} onClick={handleClose} style={{ paddingLeft: 13, textDecoration: 'none' }}>\r\n                <Link tyle={{ boxShadow: \"none\" }} to={item.Path} href=\"#\"><span>{item.Name}</span></Link>\r\n              </MenuItem>\r\n            ))\r\n\r\n          }\r\n        </Menu>\r\n        : \"\"\r\n      }\r\n    </>\r\n\r\n  );\r\n}\r\nexport default withRouter(CustomMenu);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst HeaderButton = ({ menuName, onClick, isLoggedIn }) => {\r\n  \r\n  const click=()=>\r\n  {\r\n    onClick(isLoggedIn);\r\n  }\r\n  return (\r\n    <>\r\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={()=>click()}>\r\n        <Typography variant=\"h6\" gutterBottom style={{ color: 'white' }}>          \r\n            <Link style={{ textDecoration: 'none', boxShadow: \"none\", color: 'white' }} to={\"/\"} href=\"#\">\r\n              {menuName}\r\n            </Link>\r\n        </Typography>\r\n      </Button>     \r\n    </>\r\n\r\n  );\r\n}\r\nexport default withRouter(HeaderButton);","import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Avatar, Button, Tooltip } from '@material-ui/core';\r\nimport CustomMenu from './Controls/CustomMenu';\r\nimport HeaderButton from './Controls/HeaderButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    med: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n\r\n    const [isLoggedIn, setLoggedIn] = useState(false)\r\n    const classes = useStyles();\r\n\r\n    let newSubMenus = [\r\n        {\r\n            Name: \"User\",\r\n            Path: \"/Users/New\"\r\n        },\r\n        {\r\n            Name: \"Student\",\r\n            Path: \"/Students/New\"\r\n        },\r\n        {\r\n            Name: \"Teacher\",\r\n            Path: \"/Teachers/New\"\r\n        }\r\n    ]\r\n\r\n    let listSubMenus = [\r\n        {\r\n            Name: \"Users\",\r\n            Path: \"/Users\"\r\n        },\r\n        {\r\n            Name: \"Students\",\r\n            Path: \"/Students\"\r\n        },\r\n        {\r\n            Name: \"Teachers\",\r\n            Path: \"/Teachers\"\r\n        }\r\n    ]\r\n\r\n    let authSubMenus = [\r\n        {\r\n            Name: \"SignIn\",\r\n            Path: \"/SignIn\"\r\n        },\r\n        {\r\n            Name: \"SignUp\",\r\n            Path: \"/SignUp\"\r\n        }\r\n    ]\r\n\r\n    const login = (islogin) => {\r\n        setLoggedIn(islogin)\r\n        Redirect(\"/Home\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid>\r\n                    <Typography variant=\"h4\" gutterBottom style={{ color: 'white', paddingTop: \"5px\" }}>\r\n                        Test Application\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid style={{ marginLeft: 'auto' }}>\r\n                    {\r\n                        isLoggedIn == true ?\r\n                            <>\r\n                                <CustomMenu menuName=\"HOME\" />\r\n                                <CustomMenu menuName=\"NEW\" subMenus={newSubMenus} />\r\n                                <CustomMenu menuName=\"LIST\" subMenus={listSubMenus} />\r\n                                <CustomMenu menuName=\"Auth\" subMenus={authSubMenus} />\r\n                                {\r\n                                    //                               <HeaderButton menuName=\"LOGOUT\" onClick={login} isLoggedIn={false} />                           \r\n                                }\r\n                                <Button onClick={login} isLoggedIn={false}>\r\n                                    <Tooltip title=\"Logoff\" >\r\n                                        <Avatar className={classes.med}></Avatar>\r\n                                    </Tooltip>\r\n                                </Button>\r\n\r\n                            </>\r\n                            :\r\n                            <HeaderButton menuName=\"LOGIN\" onClick={login} isLoggedIn={true} />\r\n\r\n                    }\r\n                    {\r\n                        // <NavigationBar></NavigationBar>\r\n                    }\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React from 'react';\nimport Student from \"./Components/Student\"\nimport Teacher from \"./Components/Teacher\"\nimport HomePage from \"./Components/HomePage\"\nimport { BrowserRouter, Route, Switch, Link, NavLink } from 'react-router-dom';\nimport Users from './Components/Users';\nimport NotFound from './Components/NotFound';\nimport StudentEntry from './Components/EntryScreens/StundentEntry';\nimport TeacherEntry from './Components/EntryScreens/TeacherEntry';\nimport UserEntry from './Components/EntryScreens/UserEntry';\nimport SignIn from './Components/Authentication/SignIn';\nimport SignUp from './Components/Authentication/SignUp';\nimport Header from \"./Components/Header\"\n\nfunction App() {\n  //const nodeRef = React.useRef(null);\n  return (\n    <BrowserRouter >\n      < >\n        <header className=\"App-header\">\n          <Header></Header>\n        </header>\n        <div>\n          <Switch>\n            <Route exact path=\"/\"></Route>\n            <Route path=\"/Students/New\" component={StudentEntry} />\n            <Route path=\"/Teachers/New\" component={TeacherEntry} />\n            <Route path=\"/Users/New\" component={UserEntry} />\n\n            <Route path=\"/Students\" component={Student} />\n            <Route path=\"/Teachers\" component={Teacher} />\n            <Route path=\"/Users\" component={Users} />\n            <Route path=\"/HomePage\" component={HomePage} />\n            <Route path=\"/SignIn\" component={SignIn} />\n            <Route path=\"/SignUp\" component={SignUp} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}