{"version":3,"sources":["Components/AGGridControls/AgGridButtonRenderer.js","Components/AGGridControls/AgGridStatusRenderer.js","Components/Controls/DialogBox.js","Components/ListScreens/StudentsList.js","Components/Student.js","Components/ListScreens/TeachersList.js","Components/Teacher.js","Components/ListScreens/FeaturesList.js","Components/HomePage.js","Components/Controls/BackdropControl.js","Components/ListScreens/UsersList.js","Components/Users.js","Components/NotFound.js","Components/EntryScreens/StundentEntry.js","Components/EntryScreens/TeacherEntry.js","Components/EntryScreens/UserEntry.js","Components/Controls/CustomMenu.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AgGridButtonRenderer","props","console","log","value","handleAddClick","a","handleClick","handleDeleteClick","handleEditClick","style","color","orange","onClick","red","green","AgGridStatusRenderer","handler","dialogApi","title","content","action","setOpen","setTitle","setContent","setAction","DialogBox","handleAction","React","useState","open","useEffect","handleClose","handleOk","Dialog","onClose","DialogTitle","id","DialogContent","map","con","index","DialogContentText","DialogActions","Button","autoFocus","StudentsList","MockData","studentsdata","setStudentData","selStudent","setSelStudent","studentAction","studentid","alert","handleDeleteConfirmation","students","Object","values","filter","item","padding","Typography","variant","component","Accordion","AccordionSummary","expandIcon","AccordionDetails","className","height","width","pagination","paginationPageSize","frameworkComponents","buttonRederer","ButtonRederer","statusRenderer","StatusRederer","rowData","skipHeaderOnAutoSize","resizable","onGridReady","params","api","sizeColumnsToFit","field","cellRenderer","cellRendererParams","caption","headerName","sortable","editable","Student","TeachersList","teachersData","Teachers","makeStyles","card","display","cardDetails","flex","cardMedia","FeaturesList","classes","posts","setPost","AppFeaturesMockData","Container","maxWidth","Grid","container","spacing","post","xs","md","CardActionArea","href","Card","CardContent","date","paragraph","description","Hidden","xsDown","CardMedia","image","imageTitle","HomePage","useStyles","theme","root","flexDirection","alignItems","backdrop","zIndex","drawer","BackdorpControl","defaultOpen","message","Backdrop","CircularProgress","UsersList","data","setData","fetch","headers","then","response","json","myJson","setTimeout","length","Users","NotFound","textAlign","to","StudentEntry","TeacherEntry","seeMore","marginTop","marginLeft","marginRight","marginBottom","background","header","UserEntry","Paper","Box","p","m","bgcolor","autoComplete","sm","TextField","required","name","label","fullWidth","FormControlLabel","control","Checkbox","withRouter","menuName","subMenus","anchorEl","setAnchorEl","event","currentTarget","gutterBottom","textDecoration","boxShadow","Menu","keepMounted","Boolean","MenuItem","paddingLeft","tyle","Path","Name","margin","small","med","large","Header","isLoggedIn","setLoggedIn","paddingTop","Avatar","fontSize","paddingRight","App","exact","path","Teacher","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5866b015.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { green, orange, red } from '@material-ui/core/colors';\r\nfunction AgGridButtonRenderer(props) {\r\nconsole.log(props.value)\r\n    const handleAddClick = async()=>{\r\n        await props.handleClick(props.value, 'Add');\r\n        //alert('Add')\r\n    }\r\n    const handleDeleteClick = async()=>{\r\n        //alert('Delete')\r\n        await props.handleClick(props.value, 'Delete');\r\n    }\r\n    const handleEditClick = async()=>{\r\n        //alert('Edit')\r\n        await props.handleClick(props.value, 'Edit');\r\n    }\r\n    return (\r\n        <>\r\n            <BorderColorIcon style={{ color: orange[400] }}  onClick={handleEditClick} ></BorderColorIcon>\r\n            <CancelIcon style={{ color: red[400] }}  onClick={handleDeleteClick} ></CancelIcon>\r\n            <AddCircleIcon style={{ color: green[400] }} onClick={handleAddClick} ></AddCircleIcon>\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default AgGridButtonRenderer;","import React from 'react'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport { green,orange,red } from '@material-ui/core/colors';\r\nconst AgGridStatusRenderer = (props) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.value == 'true' || props.value == 'active'?\r\n                    <CheckIcon style={{ color: green[400] }} />                   \r\n                    :\r\n                    <CheckIcon style={{ color: red[400] }} />\r\n                }               \r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AgGridStatusRenderer;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\n\r\nlet handler = {}\r\n\r\nexport const dialogApi =\r\n{\r\n  show: (title, content, action) => {\r\n    handler.setOpen(true)\r\n    handler.setTitle(title)\r\n    handler.setContent([content])\r\n    handler.setAction(action)\r\n  }\r\n  ,\r\n  showContentList: (title, content, action) => {\r\n    handler.setOpen(true)\r\n    handler.setTitle(title)\r\n    handler.setContent(content)\r\n    handler.setAction(action)\r\n  },\r\n\r\n}\r\n\r\nconst DialogBox = ({ handleAction }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [content, setContent] = React.useState('');\r\n  const [action, setAction] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n      handler.setOpen = setOpen\r\n      handler.setTitle = setTitle\r\n      handler.setContent = setContent\r\n      handler.setAction = setAction\r\n  }, []\r\n  )\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOk = async() => {\r\n    setOpen(false)\r\n    await handleAction(action)\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            content ?\r\n              content.map((con, index) =>\r\n                <DialogContentText key={index} id=\"dialog-description-content-text\">\r\n                  {con}\r\n                </DialogContentText>\r\n              ) : null\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOk} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nDialogBox.propTypes = {\r\n  handleAction: PropTypes.func\r\n}\r\n\r\nexport default DialogBox","import React, { useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MockData from '../../MockData/Students.json'\r\nimport ButtonRederer from '../AGGridControls/AgGridButtonRenderer'\r\nimport StatusRederer from '../AGGridControls/AgGridStatusRenderer'\r\nimport DialogBox, { dialogApi } from '../Controls/DialogBox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nfunction StudentsList() {\r\n\r\n  //let studentsdata = MockData\r\n  const [studentsdata, setStudentData] = useState(MockData)\r\n  const [selStudent, setSelStudent] = useState('')\r\n  console.log(MockData);\r\n\r\n\r\n\r\n  const studentAction = async (studentid, action) => {\r\n    console.log(studentid, action);\r\n    if (action == 'Delete') {\r\n      setSelStudent(studentid)\r\n      dialogApi.show(\"Delete Confirmation\", \"Deleting the student from the records\", \"Delete\")\r\n\r\n    } else {\r\n      alert('action completed' + 'Student id: ' + studentid + ' Action: ' + action);\r\n    }\r\n\r\n  }\r\n\r\n  const handleDeleteConfirmation = async () => {\r\n    //alert(selStudent)\r\n    let students = Object.values(studentsdata)\r\n    console.log('before filter', students)\r\n    setStudentData(students.filter(item => item.id !== selStudent))\r\n\r\n    console.log('after filter', studentsdata)\r\n\r\n  }\r\n\r\n  function onMygridReady(params) {\r\n    params.api.sizeColumnsToFit();\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        Student List\r\n      </Typography>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography >Grid Features</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            You can sort the columns by clicking on the column header. You can filter data from the column header.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    \r\n      <div className=\"ag-theme-alpine\" style={{ height: 350, width: 'auto' }}>\r\n        <AgGridReact pagination={true} paginationPageSize=\"10\"\r\n          frameworkComponents={{\r\n            buttonRederer: ButtonRederer,\r\n            statusRenderer: StatusRederer\r\n          }\r\n          }\r\n          rowData={studentsdata}\r\n          skipHeaderOnAutoSize=\"true\"\r\n          resizable=\"true\"\r\n          onGridReady={onMygridReady}\r\n        >\r\n          <AgGridColumn width={110} field=\"id\" cellRenderer=\"buttonRederer\"\r\n            cellRendererParams={{ caption: \"CRUD\", handleClick: studentAction }}\r\n            headerName=\"\"></AgGridColumn>\r\n          <AgGridColumn field=\"activeStatus\" cellRenderer=\"statusRenderer\" width={90}\r\n            headerName=\"Active\" ></AgGridColumn>\r\n          <AgGridColumn field=\"id\" width={60} ></AgGridColumn>\r\n          <AgGridColumn field=\"firstname\" headerName=\"First Name\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"lastname\" headerName=\"Last Name\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"gender\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"email\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"username\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n          <AgGridColumn field=\"color\" sortable={true} filter={true} editable={true}></AgGridColumn>\r\n        </AgGridReact>\r\n        <DialogBox handleAction={handleDeleteConfirmation} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default StudentsList;","import React, { useEffect, useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport StudentsList from \"./ListScreens/StudentsList\"\r\nfunction Student() {\r\n\r\n  return (\r\n    <>\r\n      <StudentsList/>\r\n    </>\r\n  );\r\n}\r\nexport default Student;","import React from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MockData from '../../MockData/Teachers.json'\r\nfunction TeachersList() {\r\n\r\n    let teachersData = MockData\r\n    console.log(MockData);\r\n\r\n    return (\r\n        <div style={{ padding: '10px' }}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                Teachers List\r\n            </Typography>\r\n            <div className=\"ag-theme-alpine\" style={{ height: '450px', width: 'auto' }}>\r\n                <AgGridReact rowData={teachersData} pagination={true} paginationPageSize=\"10\"  >\r\n                    <AgGridColumn field=\"id\" ></AgGridColumn>\r\n                    <AgGridColumn field=\"first_name\" headerName=\"First Name\"></AgGridColumn>\r\n                    <AgGridColumn field=\"last_name\" headerName=\"Last Name\"></AgGridColumn>\r\n                    <AgGridColumn field=\"gender\"></AgGridColumn>\r\n                    <AgGridColumn field=\"email\"></AgGridColumn>\r\n                    <AgGridColumn field=\"username\"></AgGridColumn>\r\n                    <AgGridColumn field=\"color\"></AgGridColumn>\r\n                </AgGridReact>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeachersList;","import React from 'react';\r\nimport TeachersList from \"./ListScreens/TeachersList\"\r\nfunction Teachers() {    \r\n    \r\n    return (\r\n       <>\r\n       <TeachersList></TeachersList>\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Teachers;","import React, { useEffect,useState } from 'react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppFeaturesMockData from '../../MockData/ApplicationFeatures.json'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      display: 'flex',\r\n    },\r\n    cardDetails: {\r\n      flex: 1,\r\n    },\r\n    cardMedia: {\r\n      width: 160,\r\n    },\r\n  });\r\n\r\nfunction FeaturesList() {\r\n    \r\n    const classes = makeStyles();   \r\n\r\n    const [posts, setPost]= useState([])    \r\n      useEffect(()=>{    \r\n        setPost(Object.values(AppFeaturesMockData))\r\n      },[])\r\n\r\n    return(\r\n        <>      \r\n      <Container maxWidth=\"lg\">      \r\n          <br/>\r\n          <Grid container spacing={4}>\r\n            {posts.map((post) => (\r\n                  <Grid item xs={12} md={6}>\r\n                    <CardActionArea component=\"a\" href=\"#\">\r\n                      <Card className={classes.card}>\r\n                        <div className={classes.cardDetails}>\r\n                          <CardContent>\r\n                            <Typography component=\"h2\" variant=\"h5\">\r\n                              {post.title}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                              {post.date}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" paragraph>\r\n                              {post.description}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"primary\">\r\n                              Continue reading...\r\n                            </Typography>                            \r\n                          </CardContent>\r\n                        </div>\r\n                        <Hidden xsDown>\r\n                          <CardMedia className={classes.cardMedia} image={post.image} title={post.imageTitle} />\r\n                        </Hidden>\r\n                      </Card>\r\n                    </CardActionArea>\r\n                  </Grid>\r\n                \r\n            ))}\r\n          </Grid>                \r\n      \r\n      </Container>  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default FeaturesList;","import React, { useEffect,useState } from 'react';\r\nimport FeatureList from '../Components/ListScreens/FeaturesList'\r\nfunction HomePage() {\r\n        return(\r\n        <>\r\n         <FeatureList/>\r\n        </>\r\n    );\r\n}\r\nexport default HomePage;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: 10\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nlet handler = {}\r\n\r\nexport const backDropApi = {\r\n    open: () => {\r\n        handler.setOpen(true)\r\n    },\r\n    clsoe: () => {\r\n        handler.setOpen(false)\r\n    }\r\n}\r\n\r\nconst BackdorpControl = ({ defaultOpen, message }) => {\r\n\r\n    message = message || \"\"\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        handler.setOpen = setOpen\r\n    }, []\r\n\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop className={classes.backdrop} open={open || defaultOpen} >\r\n                <div className={classes.root}>\r\n                    <div><CircularProgress color=\"inherit\" /></div>\r\n                    <div><Typography>{message} </Typography></div>\r\n                </div>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n\r\nBackdorpControl.propTypes = {\r\n    defaultOpen: PropTypes.bool,\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default BackdorpControl;","import React, { useEffect, useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonRederer from '../AGGridControls/AgGridButtonRenderer'\r\nimport StatusRederer from '../AGGridControls/AgGridStatusRenderer'\r\nimport DialogBox, { dialogApi } from '../Controls/DialogBox';\r\nimport Backdrop from '../Controls/BackdropControl';\r\nfunction UsersList() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const getData = () => {\r\n        fetch('https://gorest.co.in/public/v1/users'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }            \r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                \r\n                setTimeout(() => {  setData(myJson.data);}, 1000);\r\n               \r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n\r\n    const studentAction = async (studentid, action) => {\r\n        console.log(studentid, action);\r\n        if (action == 'Delete') {\r\n            dialogApi.show(\"Delete Confirmation\", \"Deleting the student from the records\", \"Delete\")\r\n\r\n        } else {\r\n            alert('action completed' + 'Student id: ' + studentid + ' Action: ' + action);\r\n        }\r\n\r\n    }\r\n\r\n    const handleDeleteConfirmation = async () => {\r\n        alert('deleted')\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: '10px' }}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                Users List\r\n            </Typography>\r\n            <div className=\"ag-theme-alpine\" style={{ height: '450px', width: 'auto' }}>\r\n                {data.length ?\r\n                    <AgGridReact\r\n                        frameworkComponents={{\r\n                            buttonRederer: ButtonRederer,\r\n                            statusRenderer: StatusRederer\r\n                        }\r\n                        }\r\n                        rowData={data}\r\n                        skipHeaderOnAutoSize=\"true\"\r\n                    >\r\n                        <AgGridColumn width={100} field=\"id\" headerName=\"\" cellRenderer=\"buttonRederer\" cellRendererParams={{ caption: \"CRUD\", handleClick: studentAction }} ></AgGridColumn>\r\n                        <AgGridColumn field=\"status\" cellRenderer=\"statusRenderer\" width={100}\r\n                            headerName=\"Active\" ></AgGridColumn>\r\n                        <AgGridColumn field=\"id\" ></AgGridColumn>\r\n                        <AgGridColumn field=\"name\" headerName=\"Name\"></AgGridColumn>\r\n                        <AgGridColumn field=\"email\" headerName=\"Email\"></AgGridColumn>\r\n                        <AgGridColumn field=\"gender\"></AgGridColumn>\r\n                        <AgGridColumn field=\"status\"></AgGridColumn>\r\n                    </AgGridReact>\r\n                    : <Backdrop defaultOpen={true}  message=\"Fetching data\" />\r\n                }\r\n                <DialogBox handleAction={handleDeleteConfirmation} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MockData from '../MockData/Students.json'\r\nimport ButtonRederer from './AGGridControls/AgGridButtonRenderer'\r\nimport StatusRederer from './AGGridControls/AgGridStatusRenderer'\r\nimport DialogBox, { dialogApi } from './Controls/DialogBox';\r\nimport Backdrop from './Controls/BackdropControl';\r\nimport UsersList from \"./ListScreens/UsersList\"\r\nfunction Users() {\r\n\r\n    \r\n    return (\r\n        <>\r\n        <UsersList/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction NotFound()\r\n{\r\n    return(\r\n        <>\r\n        <br/><br/><br/><br/><br/>\r\n        <Typography variant=\"h5\" style={{textAlign:'center'}} > We dont found this page in application. This is invalid operation.</Typography>\r\n        <Typography variant=\"h8\" style={{textAlign:'center'}} > Link</Typography>\r\n       <Link to=\"/\" style={{textAlign:'center', alignItems:'right'}}>Go Home</Link>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\nfunction StudentEntry() {\r\n\r\n    return(\r\n        <>\r\n        <div>This is StudentEntry component </div><br/>\r\n        <div>This is StudentEntry component </div><br/>\r\n        <div>This is StudentEntry component </div><br/>\r\n        <div>This is StudentEntry component </div><br/>\r\n        <div>This is StudentEntry component </div><br/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentEntry;","import React from 'react'\r\nfunction TeacherEntry() {\r\n\r\n    return(\r\n        <>\r\n        <div>This is TeacherEntry component </div><br/>\r\n        <div>This is TeacherEntry component </div><br/>\r\n        <div>This is TeacherEntry component </div><br/>\r\n        <div>This is TeacherEntry component </div><br/>\r\n        <div>This is TeacherEntry component </div><br/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherEntry;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    background: \"#b3d9ff\"\r\n  },\r\n  header: {\r\n    color: \"red\"\r\n  },\r\n}));\r\n\r\nfunction UserEntry() {\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Paper style={{ padding: '2px' }} >\r\n        <Box display=\"flex\" p={1} m={1} bgcolor=\"background.paper\" >\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            User Information\r\n          </Typography>\r\n        </Box>\r\n        <form autoComplete=\"off\">\r\n          <Grid container spacing={1} id=\"121\" >\r\n            <Grid item xs={12} sm={6} >\r\n              <TextField\r\n                required\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                fullWidth\r\n                // autoComplete=\"given-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                label=\"Last name\"\r\n                fullWidth\r\n                // autoComplete=\"family-name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                fullWidth\r\n                //  autoComplete=\"shipping address-line1\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-line2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                fullWidth\r\n                //autoComplete=\"shipping address-level2\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"zip\"\r\n                name=\"zip\"\r\n                label=\"Zip / Postal code\"\r\n                fullWidth\r\n                //autoComplete=\"shipping postal-code\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"country\"\r\n                name=\"country\"\r\n                label=\"Country\"\r\n                fullWidth\r\n               // autoComplete=\"shipping country\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"secondary\" name=\"isActive\" value=\"yes\" />}\r\n                label=\"Acitve\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserEntry;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst CustomMenu = ({ menuName, subMenus }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <Typography variant=\"h6\" gutterBottom style={{ color: 'white' }}>\r\n          {subMenus ?\r\n            menuName :\r\n            <Link style={{ textDecoration: 'none', boxShadow: \"none\", color: 'white' }} to={\"/\"} href=\"#\">\r\n              {menuName}\r\n            </Link>}\r\n        </Typography>\r\n      </Button>\r\n      {subMenus ?\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          {\r\n\r\n            subMenus.map((item, index) => (\r\n              <MenuItem key={'Key' + index + menuName} onClick={handleClose} style={{ paddingLeft: 13, textDecoration: 'none' }}>\r\n                <Link tyle={{ boxShadow: \"none\" }} to={item.Path} href=\"#\"><span>{item.Name}</span></Link>\r\n              </MenuItem>\r\n            ))\r\n\r\n          }\r\n        </Menu>\r\n        : \"\"\r\n      }\r\n    </>\r\n\r\n  );\r\n}\r\nexport default withRouter(CustomMenu);","import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport CustomMenu from './Controls/CustomMenu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    med: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}));\r\nconst Header = () => {\r\n\r\n    const [isLoggedIn, setLoggedIn] = useState(false)\r\n    const classes = useStyles();\r\n\r\n    let newSubMenus = [{\r\n        Name: \"Student\",\r\n        Path: \"/Students/New\"\r\n    },\r\n    {\r\n        Name: \"Teacher\",\r\n        Path: \"/Teachers/New\"\r\n    },\r\n    {\r\n        Name: \"User\",\r\n        Path: \"/Users/New\"\r\n    }]\r\n\r\n    let listSubMenus = [\r\n        {\r\n            Name: \"Students\",\r\n            Path: \"/Students\"\r\n        },\r\n        {\r\n            Name: \"Teachers\",\r\n            Path: \"/Teachers\"\r\n        },\r\n        {\r\n            Name: \"Users\",\r\n            Path: \"/Users\"\r\n        }]\r\n    return (\r\n        <>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid>\r\n                    <Typography variant=\"h4\" gutterBottom style={{ color: 'white', paddingTop: \"5px\" }}>\r\n                        Test Application\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid style={{ marginLeft: 'auto' }}>\r\n                    {\r\n                        isLoggedIn == true ?\r\n                               <>  \r\n                                <CustomMenu menuName=\"HOME\"/>\r\n                                <CustomMenu menuName=\"NEW\" subMenus={newSubMenus} />\r\n                                <CustomMenu menuName=\"LIST\" subMenus={listSubMenus} />\r\n                                <Button><Avatar className={classes.med}></Avatar></Button>\r\n                                <Link onClick={()=>setLoggedIn(false)}  style={{ color: 'white', paddingTop: \"5px\", fontSize: \"20px\" }} to=\"\">Logout</Link>\r\n                            </>\r\n                            :\r\n                            <Link onClick={()=>setLoggedIn(true)} style={{ color: 'white', paddingTop: \"5px\", paddingRight:\"20px\", fontSize: \"20px\" }} to=\"\">Login</Link>\r\n                    }\r\n                    {\r\n                        // <NavigationBar></NavigationBar>\r\n                    }\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React from 'react';\nimport Student from \"./Components/Student\"\nimport Teacher from \"./Components/Teacher\"\nimport HomePage from \"./Components/HomePage\"\nimport { BrowserRouter, Route, Switch, Link, NavLink } from 'react-router-dom';\nimport Users from './Components/Users';\nimport NotFound from './Components/NotFound';\nimport StudentEntry from './Components/EntryScreens/StundentEntry';\nimport TeacherEntry from './Components/EntryScreens/TeacherEntry';\nimport UserEntry from './Components/EntryScreens/UserEntry';\nimport Header from \"./Components/Header\"\n\nfunction App() {\n\n  return (\n    <BrowserRouter >\n      < >\n        <header className=\"App-header\">\n          <Header></Header>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route path=\"/Students/New\" component={StudentEntry} />\n          <Route path=\"/Teachers/New\" component={TeacherEntry} />\n          <Route path=\"/Users/New\" component={UserEntry} />\n          \n          <Route path=\"/Students\" component={Student} />\n          <Route path=\"/Teachers\" component={Teacher} />\n          <Route path=\"/Users\" component={Users} />\n          <Route path=\"/HomePage\" component={HomePage} />\n          <Route component={NotFound} />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}